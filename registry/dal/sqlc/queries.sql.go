// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: queries.sql

package sqlc

import (
	"context"
)

const createDAP = `-- name: CreateDAP :exec
INSERT INTO daps (id, did, handle, date_created)
  VALUES (?, ?, ?, ?)
`

type CreateDAPParams struct {
	ID          string
	Did         string
	Handle      string
	DateCreated string
}

func (q *Queries) CreateDAP(ctx context.Context, arg CreateDAPParams) error {
	_, err := q.db.ExecContext(ctx, createDAP,
		arg.ID,
		arg.Did,
		arg.Handle,
		arg.DateCreated,
	)
	return err
}

const getHandleDID = `-- name: GetHandleDID :one
SELECT pk, id, did, handle, proof, date_created FROM daps
  WHERE handle = ?
  LIMIT 1
`

func (q *Queries) GetHandleDID(ctx context.Context, handle string) (Dap, error) {
	row := q.db.QueryRowContext(ctx, getHandleDID, handle)
	var i Dap
	err := row.Scan(
		&i.Pk,
		&i.ID,
		&i.Did,
		&i.Handle,
		&i.Proof,
		&i.DateCreated,
	)
	return i, err
}
